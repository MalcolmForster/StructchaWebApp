@{
            /*
            * Create new projects for the company
            * -Make a project code
            * View all projects in the company
            * Close projects when completed
            * Adjust who is on the project with role, team, and individual management
           * Adjust contractors/outside companies
    */
}

@*Projectadmin is a partial with tools to create and edit the companies projects, it used the ProjectAdmin class to display what is requested*@
@using Microsoft.AspNetCore.Identity
@using Microsoft.Data.Sql
@model DashboardModel

@{
    Model.setProjects();
}

<div class="dash-div" name="projectAdminTools">
    <h3>Project Admin Tools</h3>

    <h4>Create a New Project</h4>
    <p>Use this section to create a new project to be managed using the Structure framework</p>

    <form asp-page-handler="CreateNewProject">

        <label>Street address: </label><input name="newProjectLocation" type="text" />
        <label>Input a project Name: (not required)</label><input name="newProjectName" type="text" />
        <label>Start date: </label><input name="newProjectStartDate" type="date" />
        <input type="submit" />

    </form>
    <br />

    <h4>Current Projects</h4>

    <form  style="text-align:center">

        @{
            //Get and print out the projects of the company
            if (Model.currentProjects == null || Model.currentProjects.Count == 0)
            {
                    <p>No current projects found</p>
            }
            else
            {
                    <form asp-page-handler="EditCurrentProject" method="post">
                    @{
                        foreach (Project project in Model.currentProjects)
                        {
                            if (@project.Title != null)
                            {
                                <label>"@project.Title"</label>
                            }
                            <label>@project.Location</label>
                            <label>@project.LeadCompany.CompanyName</label>
                            <label>@project.StartDate</label>
                            <button type="button" value="@project.ProjectCode" id="editButton_@project.ProjectCode" onclick="toggleProjectEditDiv('show_@project.ProjectCode')">Edit Project</button>
                            <button style="display:none"  type="button" value="@project.ProjectCode" id="hideButton_@project.ProjectCode" onclick="toggleProjectEditDiv('hide_@project.ProjectCode')">Hide below Project</button>

                            <br />

                            <div style="display:none" class="editProject" id="edit_@project.ProjectCode">
                                <label>Add another company: </label><input name="testthingy" type="text" /><button type="submit" value="finish_@project.ProjectCode">Add</button><br />
                                <label>Remove company: </label><select><option>Test Option lol</option></select><button type="submit" value="finish_@project.ProjectCode">Remove</button><br />
                                <label>Add roles: </label><select><option>Test Option lol</option></select><button type="submit" value="finish_@project.ProjectCode" >Add</button><br />
                                <label>Remove roles: </label><select><option>Test Option lol</option></select><button type="submit" value="finish_@project.ProjectCode">Remove</button><br />
                                <label>Add individual user: </label><select><option>Test Option lol</option></select><button type="submit" value="finish_@project.ProjectCode">Add</button><br />
                                <label>Remove indiviual user: </label><select><option>Test Option lol</option></select><button type="submit" value="finish_@project.ProjectCode">Remove</button><br />
                                <label>Sign project as completed: </label><input type="date" name="finishDate" /><button type="submit" value="finish_@project.ProjectCode">Submit</button><br />
                            </div>
                        }
                    }
                </form>
            }
        }

    </form>
    <br />

    <h4>View Completed Projects</h4>

    <form asp-page-handler="EditCompletedProject">

        @{
            //Get and print out the current projects of the company

                    
            //Get and print out the projects of the company
            if (Model.finishedProjects == null || Model.finishedProjects.Count == 0)
            {
                    <p>No finished projects found</p>
            }
            else
            {
                    <form>
                        @{
                        foreach (Project project in Model.finishedProjects)
                        {
                                    <label>@project.ProjectCode</label><Button>Test button</Button>
                        }
                        }
                    </form>
            }
        
        }

    </form>
    <br />

    <h4>Add/remove contractors</h4>

    <form asp-page-handler="EditContractors">

        @{
            //Get and print out the contractors for this company
        }

    </form>

</div>



@{
    
}
