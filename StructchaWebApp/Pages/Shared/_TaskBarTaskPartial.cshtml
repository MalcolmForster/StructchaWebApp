@model List<ProjectTask>


<ul>
    @{
        List<ProjectTask> projectTasks = Model;
        List<ProjectTask> toDoTasks = new List<ProjectTask>();
        List<ProjectTask> finishedTasks = new List<ProjectTask>();


        if (projectTasks != null && projectTasks.Count > 0)
        {
            foreach (ProjectTask projectTask in projectTasks)
            {
                if (projectTask.Completed)
                {
                    finishedTasks.Add(projectTask);
                }
                else
                {
                    toDoTasks.Add(projectTask);
                }
            }
        }


        if (toDoTasks != null && toDoTasks.Count > 0)
        {
            foreach (ProjectTask pt in toDoTasks)
            {
                string s = "";
                if (!pt.UserViewedBody)
                {
                    s = "background-color:red";
                }
                else if (!@pt.UserViewedReplies)
                {
                    s = "background-color:blue";
                }
                if (pt.Title != null)
                {
                    <li style="@s" onclick="ShowIndexPartial(@pt.postId, 1)">
                        <h1>@pt.ProjectName: Priority @pt.Priority.ToString()</h1> @* Look into grouping tasks into each project perhaps*@
                        <p name="openPost_@pt.Title">@pt.Title</p>
                    </li>
                }
            }
        }

        if (finishedTasks != null && finishedTasks.Count > 0)
        {
            foreach (ProjectTask pt in finishedTasks)
            {
                if (pt.Title != null)
                {
                    <li style="background-color:seagreen;" onclick="ShowIndexPartial(@pt.postId, 1)">
                        <h1>@pt.ProjectName: Completed</h1> @* Look into grouping tasks into each project perhaps*@
                        <p name="openPost_@pt.Title">@pt.Title</p>
                    </li>
                }
            }
        }

    }
</ul>

