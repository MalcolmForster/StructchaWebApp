@page
@using StructchaWebApp.Pages.Shared;
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@model IndexModel
@{
    ViewData["Title"] = "Home page";
    Model.user = UserManager.GetUserAsync(User).Result;
}

<div class="text-center bodyContainer">

    @if (SignInManager.IsSignedIn(User)) {        

        //AppManager app = new AppManager(UserManager.GetUserId(User),"JointDraw");
        //Unsure if need a connect to GUI function
        @*        <div name="guiConnect" class="guiConnect">
            <form name="guiConForm" method="post">
                <p>Enter your one time password shown on the GUI:</p>
                <input type="text" width="20" name="guiOTP" id="guiOTP"/>
                <input type="submit" value="Connect to GUI"/>
            </form>
        </div>
        <br />*@

        <div name="userInterface" class="user-interface">
            <div name="softwareManager" class="software-manager">
                <div name="StartJD" class="appButtonSmall appButtonSoftwareManager">
                    <form name="formJointDraw" method="post">
                        @{
                            //Turn this into a forloop for each software available to the user. A method ofreturning string[] (or perhaps move to objects) is needed to find the users softwares
                            string jointDrawKey = _Common.userSoftwareActive(User.Claims.First().Value, "JointDraw");
                            if (jointDrawKey != "")
                            {
                                <a href="Structcha:@jointDrawKey">Open Current JointDraw Session</a>
                                <input type="submit" name="jointDrawClose" value="Stop session" />
                            }
                            else
                            {
                                <h3>JointDraw</h3>
                                <label>@_Common.numberOfSeat("JointDraw") seats free</label>
                                <input type="submit" name="jointDrawSubmit" value="Start session" />
                            }
                        }
                    </form>
                </div>

                <div name="StartJD" class="appButtonSmall appButtonSoftwareManager">
                    <form name="formJointDraw" method="post">
                        @{
                            //Turn this into a forloop for each software available to the user. A method ofreturning string[] (or perhaps move to objects) is needed to find the users softwares
                            string anotherKey = _Common.userSoftwareActive(User.Claims.First().Value, "JointDraw");
                            if (anotherKey != "")
                            {
                                <a href="Structcha:@anotherKey">Open Current JointDraw Session</a>
                                <input type="submit" name="jointDrawClose" value="Stop session" />
                            }
                            else
                            {
                                <h3>JointDraw</h3>
                                <label>@_Common.numberOfSeat("JointDraw") seats free</label>
                                <input type="submit" name="jointDrawSubmit" value="Start session" />
                            }
                        }
                    </form>
                </div>
            </div>


            <div name="taskBar" class="task-bar">
                <div class="taskBarSection">
                    <h3>Project Updates/Messages</h3>
                    <button name="changeToNewPost" onclick="changeMainDisplay(0)">Post a project update</button>
                        @{
                            string[] updates = { "Here is an update", "And another update", "How about another update", "Oh look, another update!", "And another update", "How about another update", "Oh look, another update!"};
                        }
                        <partial name="~/Pages/Shared/_IndexPartials.cshtml" model="updates"/>
                </div>
                <div class="taskBarSection">
                    <h3>Assigned Tasks</h3>
                    <button name="changeToNewTask" onclick="changeMainDisplay(1)">Create new task</button>
                    @{string[] assignments = { "Assignment1", "Assignment2", "Assignment3", "Assignment4" };}
                    <partial name="~/Pages/Shared/_IndexPartials.cshtml" model="assignments"/>
                </div>
                <div class="taskBarSubSection">
                    <h4>Tasks started by you</h4>
                    
                        @{
                            //Can pass a ViewDataDictionary to a partial view apparently like @await Html.PartialAsync("_PartialName", customViewData) where customViewData is the dictionary?
                            string[] selfAssigned = { "Assignment1", "Assignment2", "Assignment3", "Assignment4" };
                        }
                        <partial name="~/Pages/Shared/_IndexPartials.cshtml" model="selfAssigned" />
                </div>
            </div>


            <div name="mainView" class="main-view">
                <div name="mainDisplay" id="mainDisplay" class="main-display">
                    <!--This can be used to display the currently required partial perhaps?-->
                    <h2>Nothing to display here</h2>
                </div>
            </div>
        </div>

@*            <a href="Structcha:JointDraw:@app.user:@app.session">Start Structcha Joint Designer</a>
            Looking to load a div saying that saying the session is starting, then another hyperlink to start the program once the database has the required infomation stored *@
        
    }
    else
    {
        <div class="defaultPage">
            <h1 class="display-4">Structcha</h1>
            <h2>The advanced structural toolbox</h2>
            <h4>Designed by stuctural engineers, for structural engineers</h4><br />
            <h3>What is Structcha?</h3>
            <p>
                Structcha is a collection of useful software tools that every structural engineer should have to perform their daily duties. These include software packages for inital project arrangements, detailing, drafting, team management, contractor management, logistics management, offsite fabrication management and onsite fabrication management, and almost everything inbetween! These packages are designed by engineers feedback from the field, and are designed around two key ideas, increasing efficiency and increasing accuracy.<br />
                <h3>Why use Structcha?</h3>
            <p>
                We are dedicated to producing the most useful array of software for the structrual engineering industry. Made by passionate Software and Structural engineers, we provide the best service we can for those who utilise our services.<br />
                Stuctcha allows it's clients the ablity to pay for what they actually use, allowing for more streamlined select of software specific to their needs, and saving them money as well.<br />
                Our datacentres are the best in class at allowing engineers, contractors, architechs and management staff access to their projects information, be it drafting, analysis or mangement tools. We also offer packages that take advantage of cloud Software as a Service strucutal analysis and FEA programs, specific to the strucutral engineering field and can also be adjusted to suit the style required by our clients.
            </p>

            <h3>Drafting and Detailing</h3>
            <p>Allows for in put of a joint from 3rd party software or the ability to draw one from scratch using Structcha's own inhouse designed drafting software.</p>
            <a asp-page="/PackagesDraft">Click here to see available drafting packages</a>

            <h3>Engineering and Analysis</h3>
            <p>Allows for in put of a joint from 3rd party software or the ability to draw one from scratch using Structcha's own inhouse designed drafting software.</p>
            <a asp-page="/PackagesAnalysis">Click here to see available engineering and analysis packages</a>

            <h3>Logistics and Fabrication manangement</h3>
            <p>Allows for in put of a joint from 3rd party software or the ability to draw one from scratch using Structcha's own inhouse designed drafting software.</p>
            <a asp-page="/PackagesManage">Click here to see available management packages</a>

        </div>
    }

</div>
